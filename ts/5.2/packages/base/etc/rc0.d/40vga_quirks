if [ -n "$DEBUG_INIT" ] ; then
        echo_log "Setting Up Framebuffer"
fi

. $TS_GLOBAL

bb_switch()
{
	# Compensate for NVidia Optimus hardware. Video mux must be turned OFF
	# to switch to integrated graphics, and nvidia module must be either
	# blacklisted or removed. 

	# Unload nvidia module, if present, so bbswitch can be loaded 
	modprobe -r nvidia  >/dev/null 2>&1

	# Load bbswitch with side-effect of turning off discrete graphics card, 
	# and enabling integrated card
	modprobe bbswitch load_state=0 unload_state=1 >/dev/null 2>&1
	MODPROBE_RC=$?

	if [ $MODPROBE_RC == 0 ] ; then
		# Optimus hardware. Delete nvidia modules to absolutely prevent 
		# them from being reloaded (which causes discrete card to be switched 
		# back on)
		find /lib/modules -name 'nvidia*.ko' -delete
		depmod
	fi
	# let udev reload nvidia, if necessary
}

vesa_mode()
{
	if is_enabled $VESAMODE; then
		for module in `find /lib/modules -name radeon.ko -o -name vmwgfx.ko -o -name nouveau.ko -o -name i915.ko -o -name gma500_gfx.ko -o -name drm_kms_helper.ko`; do
			rm $module
			rundepmod=true
		done
		if is_enabled $rundepmod; then
			depmod
		fi
		if [ -e /usr/lib/xorg/modules/drivers/vesa_drv.so ]; then
			echo X_DRIVER_NAME=vesa >> $TS_RUNTIME
		fi
		modprobe uvesafb &> /dev/null
		return 0
	fi
	return 1
}

find_vga_drivers()
{
	KERNEL=`uname -r`

	RADEON_VENDORS=`	grep /lib/modules/$KERNEL/modules.alias -e radeon	|cut -c 16-19 |sort -u`
	RADEON_DEVICES=`	grep /lib/modules/$KERNEL/modules.alias -e radeon	|cut -c 25-28`

	i915_VENDORS=`		grep /lib/modules/$KERNEL/modules.alias -e i915		|cut -c 16-19 |sort -u`
	i915_DEVICES=`		grep /lib/modules/$KERNEL/modules.alias -e i915		|cut -c 25-28`

	NOUVEAU_VENDORS=`	grep /lib/modules/$KERNEL/modules.alias -e nouveau	|cut -c 16-19`

	VMWGFX_VENDORS=`	grep /lib/modules/$KERNEL/modules.alias -e vmwgfx	|cut -c 16-19`
	VMWGFX_DEVICES=`	grep /lib/modules/$KERNEL/modules.alias -e vmwgfx	|cut -c 25-28`

	GMA_VENDORS=`		grep /lib/modules/$KERNEL/modules.alias -e gma500_gfx	|cut -c 16-19`
	GMA_DEVICES=`		grep /lib/modules/$KERNEL/modules.alias -e gma500_gfx	|cut -c 25-28`
}

detect_vga_adapters()
{
	for vid in $VMWGFX_VENDORS ; do
		if [ "$VENDOR" == "$vid" ] ; then
			for pid in $VMWGFX_DEVICES ; do
				if [ "$DEVICE" == "$pid" ]; then
					VMWGFX=true
					kms=true
				fi
			done
		fi
	done
	for vid in $RADEON_VENDORS ; do
		if [ "$VENDOR" == "$vid" ] ; then
			for pid in $RADEON_DEVICES ; do
				if [ "$DEVICE" == "$pid" ]; then
					RADEON=true
					kms=true
				fi
			done
		fi
	done
	for vid in $i915_VENDORS ; do
		if [ "$VENDOR" == "$vid" ]; then
			for pid in $i915_DEVICES ; do
				if [ "$DEVICE" == "$pid" ]; then
					i915=true
					kms=true
				fi
			done
		fi
	done
	for vid in $NOUVEAU_VENDORS ; do
		if [ "$VENDOR" == "$vid" ]; then
			NOUVEAU=true
			kms=true
		fi
	done
	for vid in $GMA_VENDORS ; do
		if [ "$VENDOR" == "$vid" ] ; then
			for pid in $GMA_DEVICES ; do
				if [ "$DEVICE" == "$pid" ]; then
					GMA=true
					kms=true
				fi
			done
		fi
	done
}

video_quirks()
{
	bb_switch
	if ! vesa_mode; then
		find_vga_drivers
		for card_id in `/bin/busybox lspci -m |grep -e "Class 03" |cut -d '"' -f 4-6 |sed -e 's/\"//g' -e 's/ //g' |tr "[a-z]" "[A-Z]"` ; do
			DEVICE=`echo $card_id |cut -c 5-8`
			VENDOR=`echo $card_id |cut -c 1-4`
			detect_vga_adapters
		done
		if [ -z "$uvesafb" ] \
		|| ! is_disabled $uvesafb; then
			if module_available uvesafb \
			&& ! is_enabled $kms \
			&& [ ! -e /sys/devices/virtual/vtconsole/vtcon1 ]; then
	                	modprobe uvesafb &> /dev/null
        		fi
		fi
	fi
}

video_quirks
